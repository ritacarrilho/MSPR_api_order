name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  CI_CD_Pipeline:
    name: CI/CD Pipeline
    runs-on: ubuntu-latest

    steps:
      - name: Initialize Git User
        run: |
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: |
          docker-compose build

      - name: Start Docker containers
        run: |
          docker-compose up -d
          sleep 60  # Augmenter le temps d'attente pour être sûr que les services sont disponibles

      - name: Check Docker container logs
        run: |
          docker-compose logs kawa-orders-app

      - name: Test API
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:8081/ | grep "expected_response"; then
              echo "API is up!"
              exit 0
            fi
            echo "Waiting for API to be available..."
            sleep 10
          done
          exit 1  # Échoue le job si l'API n'est pas disponible

      - name: Checkout release branch with token
        if: success()  # Si l'API est disponible
        uses: actions/checkout@v3
        with:
          ref: release
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Merge main into release
        if: success()  # Si l'API est disponible
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          echo "Merging main into release"
          git fetch origin main
          git checkout -B release origin/main
          git push --force https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }} release
          echo "Merge et push forcé de la branche main vers release validé"

      - name: Check test failure
        if: failure()  # Si une étape précédente a échoué
        run: echo "Échec du test ou du démarrage de l'API !"
