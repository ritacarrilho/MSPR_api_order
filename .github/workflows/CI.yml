name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  CI_CD_Pipeline:
    name: CI/CD Pipeline
    runs-on: ubuntu-latest

    steps:
      - name: Initialize Git User
        run: |
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Vérifie l'installation de Docker Compose

      - name: Build Docker images
        run: |
          docker-compose build

      - name: Start Docker containers
        run: |
          docker-compose up -d
          sleep 30  # Attente pour démarrer les conteneurs

      - name: Check Docker container logs
        run: |
          docker-compose logs kawa-orders-app

      - name: Verify Docker containers are running
        run: |
          docker ps
          # Vous pouvez ajouter d'autres vérifications ici pour vous assurer que les conteneurs sont bien en cours d'exécution

      - name: Checkout release branch with token
        if: success()  # Si les images sont construites et les conteneurs démarrent
        uses: actions/checkout@v3
        with:
          ref: release
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Merge main into release
        if: success()  # Si les conteneurs sont en cours d'exécution
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          echo "Merging main into release"
          git fetch origin main
          git checkout -B release origin/main
          git push --force https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }} release
          echo "Merge et push forcé de la branche main vers release validé"

      - name: Check test failure
        if: failure()  # Si une étape précédente a échoué
        run: echo "Échec du test ou du démarrage des conteneurs !"
